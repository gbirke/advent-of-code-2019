import scala.io.Source

object Day07 {
  def main(args: Array[String]): Unit = {
    val in = Source.fromFile("input_day07.txt").getLines.mkString.trim
    val program = in.split(",").map(str => str.toInt).toList
    val maxThrust = permutations(0,4).map( sequence => new AmplifierChain(program, sequence).runChainOnce().head ).max
    println(s"Maximum thrust generated by amplified chain: $maxThrust")
    val maxFeedbackThrust = permutations(5,9).map( sequence => new AmplifierChain(program, sequence).runChainWithFeedback() ).max
    println(s"Maximum thrust generated by amplified chain: $maxFeedbackThrust")
  }

  def permutations(start: Int, end: Int ): IndexedSeq[List[Int]] = {
    val numbers = for ( 
      a <- start to end;
      b <- start to end;
      c <- start to end;
      d <- start to end;
      e <- start to end
    ) yield List(a,b,c,d,e)
    numbers.filter( c => c.length == c.distinct.length )
  }
}
